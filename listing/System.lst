C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN ..\output\System.obj
COMPILER INVOKED BY: D:\keil\keillc51\keillc51set\C51\BIN\C51.EXE ..\program\System.c BROWSE INCDIR(..\program) DEBUG OB
                    -JECTEXTEND PRINT(..\listing\System.lst) TABS(2) OBJECT(..\output\System.obj)

line level    source

   1          #include"system.h"
   2          #include"lcd12864.h"
   3          #include"Delay.H"
   4          #include"key.h"
   5          #include"buzzer.h"
   6          #include"pid.h"
   7          #include"pwm.h"
   8          
   9          
  10          int flag=0,diatance_buf;
  11          /**************************显示页面*****************************/
  12          uchar xdata Display[5][4][17]={
  13            {                                         
  14              {"init"},{"  小球控制系统"},{"  "},{" "}                //第一页
  15            },
  16            {
  17              {"  Set_distance"},{"Expect:00"},{"Distance:   cm"},{"            next"}            //第二页
  18            },
  19            {
  20              {"  Action1"},{"32"},{"33"},{"back        next"}        //第三页
  21            },
  22            {
  23              {"  Action2"},{"42"},{"43  "},{"back        next"}            //第四页
  24            },
  25            {
  26              {"  Action3"},{"52"},{"53"},{"back        next"}        //第三页
  27            },
  28          };
  29          uchar key_value[5]={0};//存放键值
  30          char set_buff;//存放设置的距离值
  31          int actual_dis,dis;//实际距离和实际距离的附属变量
  32          /**************************************************************/
  33          
  34          State System_State=0;//系统状态的枚举变量
  35          Refresh System_refresh ={20,0,5,10,15};//系统各刷新时间结构体初始化T = 20ms
  36          /****************************************************************
  37          /*函数名：void Set_Distance()     
  38          /*功能：  实现距离设定和控制
  39          /*说明：
  40          /*修改日期：2017-11-23
  41          /*作者：c.c. 
  42          /***************************************************************/
  43          void Set_Distance()
  44          {
  45   1        int i=0,key_flag=0;
  46   1        key_value[0]=KEY4_scan();//将键值读入输入流
  47   1      
  48   1        switch(key_value[0])
  49   1        {
  50   2          case 1:
  51   2          {
  52   3            System_State = init;
  53   3            Write_comordata(0,0x01);
  54   3          }break;
C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 2   

  55   2          case 2:
  56   2          {
  57   3            if(set_buff==0)                   //0-16
  58   3                set_buff=41;
  59   3            set_buff--;
  60   3            Display[1][1][8]='0'+(set_buff)%10; //0
  61   3            Display[1][1][7]='0'+(set_buff)/10; //10
  62   3      
  63   3          }break;
  64   2          case 3:
  65   2          {
  66   3            set_buff++;
  67   3            if(set_buff==41)                  //16-0
  68   3              set_buff=0;
  69   3            Display[1][1][8]='0'+(set_buff)%10; //0
  70   3            Display[1][1][7]='0'+(set_buff)/10; //10
  71   3          }break; 
  72   2          case 4:
  73   2          {
  74   3                                    //在此循环中添加控制函数
  75   3      //      actual_dis = 15;
  76   3      /**/    PID_setpara(1,1,1);//参数：比例系数，积分系数，微分系数
  77   3            while(1)
  78   3            {
  79   4              PID_Calculate(set_buff,actual_dis);
  80   4      //        PWM2_set(PID_Calculate(set_buff,actual_dis));
  81   4              PWM2_set(pid.OUT);
  82   4              if(actual_dis != diatance_buf)//距离改变时，改变显示
  83   4              {
  84   5                if(actual_dis>0)
  85   5                { 
  86   6                  Display[1][2][9]='+'; //0                                                                           
             -                                                                                                                        
             -                                                                             
  87   6                  Display[1][2][11]='0'+actual_dis%10;  //0
  88   6                  Display[1][2][10]='0'+actual_dis/10;  //10
  89   6                }
  90   5                else
  91   5                {
  92   6                  dis = -actual_dis;
  93   6                  Display[1][2][9]='-'; //0
  94   6                  Display[1][2][11]='0'+dis%10; //0
  95   6                  Display[1][2][10]='0'+dis/10; //10
  96   6                }
  97   5                LCD12864_Display(3,&Display[1][2][0]);
  98   5                diatance_buf=actual_dis;//同步 
  99   5              }
 100   4              if(KEY4_scan()==4)
 101   4                break;
 102   4            }
 103   3            System_State = action1;
 104   3            Write_comordata(0,0x01);
 105   3          }break;
 106   2          default:break;
 107   2        }
 108   1      }
 109          
 110          /****************************************************************
 111          /*函数名：void Action1()      
 112          /*功能：
 113          /*说明：
 114          /*修改日期：2017-11-12
C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 3   

 115          /*作者：c.c. 
 116          /***************************************************************/
 117          void Action1()
 118          {
 119   1        key_value[0]=KEY4_scan();//将键值读入输入流
 120   1        switch(key_value[0])
 121   1        {
 122   2          case 1:
 123   2          {
 124   3            System_State = set_distance;
 125   3            Write_comordata(0,0x01);
 126   3            key_value[1]=0;
 127   3          }break;
 128   2          case 2:
 129   2          {
 130   3            ;
 131   3          }break;
 132   2          case 3:
 133   2          {
 134   3            ;
 135   3          }break;
 136   2          case 4:
 137   2          {
 138   3              System_State = action2;
 139   3      //        Write_comordata(0,0x01);
 140   3          }break;
 141   2          default:break;
 142   2        }
 143   1      }
 144          
 145          /****************************************************************
 146          /*函数名：void Action2()    
 147          /*功能：
 148          /*说明：
 149          /*修改日期：2017-11-12
 150          /*作者：c.c. 
 151          /***************************************************************/
 152          void Action2()
 153          {
 154   1        key_value[0]=KEY4_scan();//将键值读入输入流
 155   1        switch(key_value[0])
 156   1        {
 157   2          case 1:
 158   2          {
 159   3            System_State = action1;
 160   3      //      Write_comordata(0,0x01);
 161   3            key_value[1]=0;
 162   3          }break;
 163   2          case 2:
 164   2          {
 165   3            ;
 166   3          }break;
 167   2          case 3:
 168   2          {
 169   3            ;
 170   3          }break;
 171   2          case 4:
 172   2          {
 173   3      //        Display[4][1][0]='0'+flag/10;
 174   3      //        Display[4][1][1]='0'+flag%10;
 175   3              LCD12864_Display(2,&Display[4][1][0]);
 176   3              System_State = action3;
C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 4   

 177   3      //        Write_comordata(0,0x01);
 178   3          }break;
 179   2          default:break;
 180   2        }
 181   1      }
 182          
 183          /****************************************************************
 184          /*函数名：void Action3()      
 185          /*功能：
 186          /*说明：
 187          /*修改日期：2017-11-12
 188          /*作者：c.c. 
 189          /***************************************************************/
 190          void Action3()
 191          {
 192   1        key_value[0]=KEY4_scan();//将键值读入输入流
 193   1        switch(key_value[0])
 194   1        {
 195   2          case 1:
 196   2          {
 197   3            System_State = action2;
 198   3      //      Write_comordata(0,0x01);
 199   3            key_value[1]=0;
 200   3          }break;
 201   2          case 2:
 202   2          {
 203   3            ;
 204   3          }break;
 205   2          case 3:
 206   2          {
 207   3            ;
 208   3          }break;
 209   2          case 4:
 210   2          {
 211   3            System_State = init;
 212   3      //      Write_comordata(0,0x01);
 213   3          }break;
 214   2          default:break;
 215   2        }
 216   1      }
 217          
 218          /****************************************************************
 219          /*函数名：void System()     
 220          /*功能：  系统函数
 221          /*说明：
 222          /*修改日期：2017-11-12
 223          /*作者：c.c. 
 224          /***************************************************************/
 225          void System()
 226          {
 227   1        switch(System_State)
 228   1        {
 229   2          case init:
 230   2          {
 231   3            Write_comordata(0,0x01);                //清屏
 232   3            Delay(5);
 233   3            LCD12864_Display(1,&Display[0][1][0]);  //开机页面
 234   3            Delay(1000);
 235   3            Write_comordata(0,0x01);                //清屏
 236   3            Delay(5);
 237   3            System_State=set_distance;
 238   3          }break;
C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 5   

 239   2          case set_distance:
 240   2          {
 241   3            if(System_refresh.set_Distance_fresh>System_refresh.T)//每20ms扫描一次
 242   3            {
 243   4      //        EA = 0;
 244   4              Delay(100);
 245   4              LCD12864_Display(1,&Display[1][0][0]);
 246   4              LCD12864_Display(2,&Display[1][1][0]);
 247   4              LCD12864_Display(3,&Display[1][2][0]);
 248   4              LCD12864_Display(4,&Display[1][3][0]);
 249   4              System_refresh.set_Distance_fresh=0;
 250   4              Delay(100);
 251   4      //        EA = 1;
 252   4            }
 253   3              Set_Distance();
 254   3          }break;
 255   2          case action1:
 256   2          {
 257   3            if(System_refresh.action1_fresh>System_refresh.T)//每20ms扫描一次
 258   3            {
 259   4      //        EA = 0;
 260   4              LCD12864_Display(1,&Display[2][0][0]);
 261   4              LCD12864_Display(2,&Display[2][1][0]);
 262   4              LCD12864_Display(3,&Display[2][2][0]);
 263   4              LCD12864_Display(4,&Display[2][3][0]);
 264   4              System_refresh.action1_fresh=0;
 265   4      //        EA = 1;
 266   4            }
 267   3            Action1();
 268   3          }break;
 269   2          case action2:
 270   2          {
 271   3            if(System_refresh.action2_fresh>System_refresh.T)//每20ms扫描一次
 272   3            {
 273   4      //        EA = 0;
 274   4              LCD12864_Display(1,&Display[3][0][0]);
 275   4              LCD12864_Display(2,&Display[3][1][0]);
 276   4              LCD12864_Display(3,&Display[3][2][0]);
 277   4              LCD12864_Display(4,&Display[3][3][0]);      
 278   4              System_refresh.action2_fresh=0;
 279   4      //        EA = 1;
 280   4            }
 281   3            Action2();
 282   3          }break;
 283   2          case action3:
 284   2          {
 285   3            if(System_refresh.action3_fresh>System_refresh.T)//每20ms扫描一次
 286   3            {
 287   4      //        EA = 0;
 288   4              LCD12864_Display(1,&Display[4][0][0]);
 289   4              LCD12864_Display(2,&Display[4][1][0]);
 290   4              LCD12864_Display(3,&Display[4][2][0]);
 291   4              LCD12864_Display(4,&Display[4][3][0]);
 292   4      
 293   4              Display[4][1][0]='0'+flag/10;
 294   4              Display[4][1][1]='0'+flag%10;
 295   4      
 296   4              System_refresh.action3_fresh=0;
 297   4      //        EA = 1;
 298   4      //        P01=~P01;
 299   4            }
 300   3            Action3();
C51 COMPILER V9.00   SYSTEM                                                                11/23/2017 22:17:25 PAGE 6   

 301   3          }break;
 302   2          default :break;
 303   2        }
 304   1      }
 305          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    764    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    340    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
