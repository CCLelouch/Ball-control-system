C51 COMPILER V9.00   PID                                                                   11/23/2017 22:17:26 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN ..\output\pid.obj
COMPILER INVOKED BY: D:\keil\keillc51\keillc51set\C51\BIN\C51.EXE ..\program\pid.c BROWSE INCDIR(..\program) DEBUG OBJEC
                    -TEXTEND PRINT(..\listing\pid.lst) TABS(2) OBJECT(..\output\pid.obj)

line level    source

   1          //#include"head.h"
   2          #include"pid.h"
   3          #include "PWM.H"
   4          
   5          #define OUT0 1000
   6          
   7          PID pid;
   8          
   9          void PID_init()//清空pid
  10          {
  11   1        pid.Sv = 0;
  12   1        pid.Pv = 0;
  13   1        pid.Kp = 0;
  14   1        pid.Ki = 0;
  15   1        pid.Kd = 0;
  16   1      
  17   1        pid.Ek   = 0;
  18   1        pid.Ek_1 = 0;
  19   1        pid.Ek_2 = 0;
  20   1      
  21   1        pid.Pout = 0;
  22   1        pid.Iout = 0;       
  23   1        pid.Dout = 0;
  24   1      
  25   1        pid.OUT   = 50;
  26   1        pid.Ctime = 0;
  27   1        pid.pwm   = CYCLE;
  28   1        
  29   1        pid.T = 20;
  30   1      }
  31          
  32          void PID_setpara(float kp,float ki,float kd)
  33          {
  34   1        pid.Kp = kp;
  35   1        pid.Ki = ki;
  36   1        pid.Kd = kd;
  37   1      }
  38          
  39          uint PID_Calculate(unsigned int sv,float pv)
  40          {
  41   1        unsigned int out;
  42   1      
  43   1      //  if(pid.Ctime<pid.T)
  44   1      //    {
  45   1      //      return 0;
  46   1      //    }
  47   1      
  48   1        P22 = 0;
  49   1        P22 = 1;
  50   1      
  51   1        pid.Sv = sv;
  52   1        pid.Pv = pv;
  53   1      
  54   1        pid.Ek = pid.Sv-pid.Pv;//当前误差值
C51 COMPILER V9.00   PID                                                                   11/23/2017 22:17:26 PAGE 2   

  55   1      
  56   1      ///*P*/
  57   1      //  pid.Pout = pid.Kp*(pid.Ek-pid.Ek_1);//比例输出
  58   1      ///*I*/
  59   1      //  pid.Iout = pid.Ki*pid.Ek;//积分输出
  60   1      ///*D*/
  61   1      //  pid.Dout = pid.Kd*(pid.Ek-pid.Ek_1<<1+pid.Ek_2);//微分输出
  62   1      //
  63   1      //  out=(uint)(pid.Pout + pid.Iout + pid.Dout);
  64   1      
  65   1        pid.Pout = pid.Kp*pid.Ek;
  66   1      
  67   1        if(out>pid.pwm)
  68   1        {
  69   2          pid.OUT = pid.pwm-1;
  70   2        }
  71   1        else if(out<=0)
  72   1        {
  73   2          pid.OUT = OUT0;
  74   2        }
  75   1        else 
  76   1          pid.OUT = out;//输出pid
  77   1      
  78   1        pid.Ek_1 = pid.Ek;
  79   1        pid.Ek_2 = pid.Ek_1;
  80   1      
  81   1        pid.Ctime = 0;//清空累计值
  82   1        return pid.OUT;//pid.OUT;
  83   1      }
  84          
  85          
  86          
  87          
  88          
  89          
  90          
  91          
  92          
  93          
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    251    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
