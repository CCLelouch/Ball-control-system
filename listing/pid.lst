C51 COMPILER V9.00   PID                                                                   11/21/2017 19:14:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN ..\output\pid.obj
COMPILER INVOKED BY: D:\keil\keillc51\keillc51set\C51\BIN\C51.EXE ..\program\pid.c BROWSE INCDIR(..\program) DEBUG OBJEC
                    -TEXTEND PRINT(..\listing\pid.lst) TABS(2) OBJECT(..\output\pid.obj)

line level    source

   1          //#include"head.h"
   2          #include"pid.h"
   3          #include "PWM.H"
   4          
   5          #define OUT0 1000
   6          
   7          PID pid;
   8          
   9          void PID_init()//清空pid
  10          {
  11   1        pid.Sv = 0;
  12   1        pid.Pv = 0;
  13   1        pid.Kp = 0;
  14   1        pid.Ki = 0;
  15   1        pid.Kd = 0;
  16   1      
  17   1        pid.Ek   = 0;
  18   1        pid.Ek_1 = 0;
  19   1        pid.Ek_2 = 0;
  20   1      
  21   1        pid.Pout = 0;
  22   1        pid.Iout = 0;       
  23   1        pid.Dout = 0;
  24   1      
  25   1        pid.OUT   = 1000;
  26   1        pid.Ctime = 0;
  27   1        pid.pwm   = CYCLE;
  28   1        
  29   1        pid.T = 20;
  30   1      }
  31          
  32          void PID_setpara(float kp,float ki,float kd)
  33          {
  34   1        pid.Kp = kp;
  35   1        pid.Ki = ki;
  36   1        pid.Kd = kd;
  37   1      }
  38          
  39          uint PID_Calculate(unsigned int sv,float pv,unsigned char gain)
  40          {
  41   1        unsigned int out;
  42   1        if(gain)
  43   1          return pid.OUT; 
  44   1        if(pid.Ctime<pid.T)
  45   1          return 0;
  46   1      
  47   1        pid.Sv = sv;
  48   1        pid.Pv = pv;
  49   1      
  50   1        pid.Ek = pid.Sv-pid.Pv;//当前误差值
  51   1      /*P*/
  52   1        pid.Pout = (uint)(pid.Kp*(pid.Ek-pid.Ek_1));//比例输出
  53   1      /*I*/
  54   1        pid.Iout = (uint)(pid.Ki*pid.Ek);//积分输出
C51 COMPILER V9.00   PID                                                                   11/21/2017 19:14:30 PAGE 2   

  55   1      /*D*/
  56   1        pid.Dout = (uint)(pid.Kd*(pid.Ek-pid.Ek_1<<1+pid.Ek_2));//微分输出
  57   1      
  58   1        out=pid.Pout + pid.Iout + pid.Dout;
  59   1      
  60   1        if(out>pid.pwm)
  61   1        {
  62   2          pid.OUT = pid.pwm-10;
  63   2        }
  64   1        else if(out<=0)
  65   1        {
  66   2          pid.OUT = OUT0;
  67   2        }
  68   1        else 
  69   1          pid.OUT = out;//输出pid
  70   1      
  71   1        pid.Ek_1 = pid.Ek;
  72   1        pid.Ek_2 = pid.Ek_1;
  73   1      
  74   1        pid.Ctime = 0;//清空累计值
  75   1        return pid.OUT;//pid.OUT;
  76   1      }
  77          
  78          
  79          
  80          
  81          
  82          
  83          
  84          
  85          
  86          
  87          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    360    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
